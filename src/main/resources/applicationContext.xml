<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
    
	<import resource="applicationContext-service.xml"/>
	<import resource="applicationContext-web.xml"/>
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:configure.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource"  class="org.logicalcobwebs.proxool.ProxoolDataSource"> 
	    <property name="driver"> 
	        <value>com.mysql.jdbc.Driver</value> 
	    </property> 
	    <property name="driverUrl"> 
	         <value>${db.url}</value> 
	    </property> 
	    <property name="user" value="${db.user}" /> 
	    <property name="password" value="${db.password}" /> 
	    <property name="alias" value="Pool_0" /> 
	    <property name="maximumConnectionCount" value="${db.maxPoolSize}" /> 
	    <property name="minimumConnectionCount" value="${db.minPoolSize}" /> 
	    <property name="prototypeCount" value="1" /> 
	    <property name="houseKeepingSleepTime" value="300000" /> 
	    <property name="simultaneousBuildThrottle" value="50" /> 
	    <property name="maximumConnectionLifetime" value="3600000" /> 
	    <property name="houseKeepingTestSql" value="select CURRENT_DATE" /> 
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="annotatedClasses">
			<list> 
				<value>com.library.domain.Book</value>
				<value>com.library.domain.NewBook</value>
				<value>com.library.domain.Category</value>
				<value>com.library.domain.Borrow</value>
				<value>com.library.domain.User</value>
				<value>com.library.domain.FeedBack</value>
				<value>com.library.domain.FeedBackBook</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
				org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">${db.show_sql}</prop>
				<prop key="current_session_context_class">thread</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.transaction.factory_class">
					org.hibernate.transaction.JDBCTransactionFactory
				</prop>
				<prop key="hibernate.jdbc.fetch_size">30</prop>
				<prop key="hibernate.jdbc.batch_size">25</prop>
				<prop key="hibernate.max_fetch_depth">0</prop>
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.EhCacheProvider
				</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
		   <!--  <prop key="hibernate.hbm2ddl.auto">update</prop> -->  
			</props>
		</property>
		<property name="entityCacheStrategies">
			<props>
			<!-- 
			<prop
					key="com.hunthawk.reader.domain.system.UserImpl">
					read-write
				</prop>
			 -->
			</props>
		</property>
		<property name="collectionCacheStrategies">
			<props>
			<!-- 
			<prop
					key="com.hunthawk.reader.domain.system.UserImpl.roles">
					read-write
				</prop>
			 -->
			</props>
		</property>
	</bean>
	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
		<property name="cacheQueries" value="false" />
	</bean>
	<bean name="hibernateGenericController"
		class="com.library.hibernate.HibernateGenericController">
		<property name="hibernateTemplate">
			<ref local="hibernateTemplate" />
		</property>
		<property name="cacheQueries" value="false" />
	</bean>
</beans>

